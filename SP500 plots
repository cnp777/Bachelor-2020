library(quantmod)

# Load data
env_sp500 <- new.env()
getSymbols("^GSPC", env = env_sp500 , src = "yahoo", from = as.Date("2004-01-02"), to = as.Date("2020-04-30"), warnings = F)
sp500 <- env_sp500$GSPC
sp500 <- data.frame(date = index(sp500), coredata = (sp500))

# Definer datasættet
df_stock <- sp500[, c('date', 'coredata.GSPC.Close')]
df_stock$Close <- df_stock$coredata.GSPC.Close
df_stock$Date <- df_stock$date
df_stock <- df_stock[, c('Date', 'Close')]
df_stock_returns <- data.frame(Date = df_stock$Date, Close = df_stock$Close)

dummy_start <- which(df_stock$Date == '2004-01-02') + 1
df_stock <- df_stock[dummy_start:nrow(df_stock), ]

years <- as.character(2004:2020)
breakVec<- c(1)
N <- 0
for (i in 1:(length(years)-1)){
  year <- years[i]
  n <- sum(format(as.Date(as.character(df_stock$Date)),"%Y")==year)
  breakVec <- c(breakVec,breakVec[i] + n)
}

labelVec <- as.character(df_stock[breakVec,]$Date)

## Include break and label for last observation
breakVec <- c(breakVec,nrow(df_stock))
labelVec <- c(labelVec,as.character(tail(df_stock,1)[1,1]))
df_stock$dummy <- 1:nrow(df_stock)

# Compute raw returns with correct index
a_fald <- which(-0.05>diff(df_stock$Close)/df_stock$Close[-nrow(df_stock)])
a_stig <- which(0.05<diff(df_stock$Close)/df_stock$Close[-nrow(df_stock)])
a_fald <- a_fald+1
a_stig <- a_stig +1

length(a_stig)
length(a_fald)

b_col <- rep(1,nrow(df_stock))
b_col[a_stig] <- 3
b_col[a_fald] <- 2

b_size <- rep(0.5,nrow(df_stock))
b_size[a_stig] <- 2
b_size[a_fald] <- 2

df_stock$panel <- "Daily Closing Values"
df_stock_returns$panel <- "Daily Log-Returns"

## plot med |afkast| > 5% markeret
ggplot(data=df_stock,aes(x=1:nrow(df_stock),y=Close)) + geom_point(size=b_size,colour=b_col) +
  scale_x_continuous(breaks=breakVec,labels=labelVec) +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Daglige værdier for SP500 Index")+
  xlab("Dato") +
  ylab("Værdi") +
  facet_grid(panel~.) +
  theme(plot.title = element_text(lineheight=0.8) # face="bold"
        ,axis.text.x = element_text(angle = 45, hjust = 1,vjust=1))
        
#### Daglige logafkast
breakVec_returns <- breakVec -1
breakVec_returns[1] <- 1
labelVec_returns <- as.character(df_stock_returns[breakVec_returns,]$Date)
df_stock_returns <- data.frame(Date = df_stock$Date[-1], Close = diff(log(df_stock$Close)))
df_stock_returns$x <- df_stock_returns$Close/sd(df_stock_returns$Close)

ggplot(data=df_stock_returns,aes(x=1:nrow(df_stock_returns),y=Close)) + geom_point(size=1) +
  scale_x_continuous(breaks=breakVec_returns,labels=labelVec_returns) +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Daglige Logafkast for SP500 Index")+
  xlab("Dato") +
  ylab("Værdi") +
  theme(plot.title = element_text(lineheight=0.8) # face="bold"
        ,axis.text.x = element_text(angle = 45, hjust = 1,vjust=1)) +
  geom_hline(yintercept=0.02, color='red') + 
  geom_hline(yintercept=-0.02, color='red')

## Histogram af logafkast
ggplot(data=df_stock_returns,aes(x=x)) + 
  geom_histogram(aes(y = ..density..), binwidth=0.1, position="identity",alpha=.5,color="black") +
  stat_function(fun = dnorm, 
                args = list(mean = 0, sd = 1),
                aes(color="normal"),size=0.5)+
  scale_colour_manual("Tæthed", values = c("red") )+
  theme(legend.position="bottom") +
  xlab("standardiserede daglige prisændringer") + ylab("tæthed") +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("Histogram af logafkast") 

## QQ-plot logafkast
library(qqplotr)
ggplot(df_stock_returns, aes(sample = x)) + 
  stat_qq() + 
  stat_qq_line() + stat_qq_band() +
  theme(plot.title = element_text(hjust = 0.5)) +
  ggtitle("QQplot - logafkast") + xlab("teoretiske") + ylab("empiriske") +
  geom_vline(xintercept = -1, color='red', lty = 2) + 
  geom_vline(xintercept = 1, color='red', lty = 2)
